<robot name="base" xmlns:xacro="http://wiki.ros.org/xacro">

    <!-- set base_footprint  -->
    <xacro:property name="footprint_radius" value="0.001" />
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${footprint_radius}" />
            </geometry>
        </visual>
    </link>

    <!-- Add chassis -->
    <!-- define property -->
    <xacro:property name="base_radius" value="0.1" />
    <xacro:property name="base_length" value="0.08" />
    <xacro:property name="lidi" value="0.015" />
    <xacro:property name="base_joint" value="${base_length/2+lidi}" />

    <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="yellow">
                <color rgba="0.8 0.5 0 0.5" />
            </material>
        </visual>
    </link>
    <!-- joint -->
    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 ${base_joint}" />
    </joint>

    <!-- Add drive wheel -->
    <!-- 
        shape: cyliner
        radius: 0.035
        length: 0.015
     -->
    <xacro:property name="wheel_radius" value="0.0325" />
    <xacro:property name="wheel_length" value="0.015" />
    <xacro:property name="PI" value="${3.1415926/2}" />
    <xacro:property name="base_rjoint_z" value="${-(base_length/2 + lidi - wheel_radius) }" />
     <!-- define macro  
                        wheel_name: left or right
                         flag: -1 or 1
     
     -->
    <xacro:macro name="wheel_func" params="wheel_name flag">

        <link name="${wheel_name}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz="0 0 0" rpy="${PI} 0 0" />
                <material name="black">
                    <color rgba="0 0 0 1" />
                </material>
            </visual>
        </link>   
        <!-- joint base_link and whell -->
        <joint name="${wheel_name}2base_link" type="continuous">
            <parent link="base_link" />
            <child link="${wheel_name}_wheel" />
            <origin xyz="0 ${0.1*flag} ${base_rjoint_z}" />
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>
    <!-- call macro-->
    <xacro:wheel_func wheel_name="left" flag="1" />
    <xacro:wheel_func wheel_name="right" flag="-1" />


    <!-- Add Cardan wheel -->
    <!-- define property -->
    <xacro:property name="ball_radius" value="0.0075" />
    <xacro:property name="ball_distance" value="0.08" />
    <xacro:property name="ball_hight" value="${-(base_length/2+lidi-ball_radius)}" />

    <!-- define macro
                cardan_ball_name: front or back
                flag: 1 or -1
    -->
    <xacro:macro name="cardan_ball_func" params="cardan_ball_name flag">
        <link name="${cardan_ball_name}_cardan_ball">
            <visual>
                <geometry>
                    <sphere radius="${ball_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <material name="black">
                    <color rgba="0 0 0 1" />
                </material>
            </visual>
        </link>
        <!-- joint base_link and whell -->
        <joint name="${cardan_ball_name}2base_link" type="continuous">
            <parent link="base_link" />
            <child link="${cardan_ball_name}_cardan_ball" />
            <origin xyz="${flag*ball_distance} 0 ${ball_hight}" />
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>
    <!-- call macro -->
    <xacro:cardan_ball_func cardan_ball_name="front" flag="1" />
    <xacro:cardan_ball_func cardan_ball_name="back" flag="-1" />

</robot>
